# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/"
pkgs2load <- c('dplyr', 'magrittr', 'tidyr', 'flowCore', 'data.table', 'readr')
sapply(pkgs2load, require, character.only = TRUE)
set.seed(20191007)
# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/"
files <- list.files(data_dir, all.files = TRUE)
files <- list.files(data_dir, pattern = "10_A_KTR-019 stim_Ungated.fcs")
# markers
lineage_markers <- c("147Sm_CD20", "170Er_CD3", "145Nd_CD4",
"146Nd_CD8a", "169Tm_CD45RA", "176Yb_CD56",
"148Nd_CD16", "160Gd_CD14", "209Bi_CD61",
"159Tb_CD11c", "151Eu_CD123", "174Yb_HLA-DR")
# rename column names
extract_exprs <- function(ff, subsample = 20000){
exprs <- ff@exprs[sample(nrow(ff@exprs), min(subsample, nrow(ff@exprs))), ]
name_match <- colnames(exprs) %in% ff@parameters@data$name
ff@parameters@data$desc[is.na(ff@parameters@data$desc)] <-
ff@parameters@data$name[is.na(ff@parameters@data$desc)]
colnames(exprs)[name_match] <- ff@parameters@data$desc[name_match[!is.na(name_match)]]
return(exprs)
}
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD, .SDcols = lineage_markers]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
# write to file
write_csv(x = dt2, path = 'data/cell_data.csv')
View(dt2)
pkgs2load <- c('dplyr', 'magrittr', 'tidyr', 'flowCore', 'data.table', 'readr')
sapply(pkgs2load, require, character.only = TRUE)
set.seed(20191007)
data_dir <- "DATA/"
files <- list.files(data_dir, pattern = "10_A_KTR-019 stim_Ungated.fcs")
## read file and linearize values
samp <-  read.FCS(fcsFile, transformation="linearize")
## read file and linearize values
samp <-  read.FCS(files, transformation="linearize")
## read file and linearize values
samp <-  read.FCS(files[0], transformation="linearize")
## read file and linearize values
samp <-  read.FCS(files, transformation="linearize")
## read file and linearize values
samp <-  read.FCS(paste0(data_dir, file), transformation="linearize")
pkgs2load <- c('dplyr', 'magrittr', 'tidyr', 'flowCore', 'data.table', 'readr')
sapply(pkgs2load, require, character.only = TRUE)
set.seed(20191007)
data_dir <- "DATA/"
files <- list.files(data_dir, pattern = "10_A_KTR-019 stim_Ungated.fcs")
## read file and linearize values
samp <-  read.FCS(paste0(data_dir, file), transformation="linearize")
exprs(samp[1:3,])
## a sample file
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs", "0877408774.B08", package="flowCore")
## a sample file
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs", package="flowCore")
## a sample file
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs", package="flowCore")
## a sample file
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs")
## read file and linearize values
samp <-  read.FCS(filename = "10_A_KTR-019 stim_Ungated.fcs", transformation="linearize")
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs", package="base")
## read file and linearize values
samp <-  read.FCS(fcsFile, transformation="linearize")
exprs(samp[1:3,])
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs", package="masteerShifu")
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs", package="masterShifu")
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs")
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs")
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs")
## read file and linearize values
samp <-  read.FCS(fcsFile, transformation="linearize")
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs")
## read file and linearize values
samp <-  read.FCS(files, transformation="linearize")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
pkgs2load <- c('dplyr', 'magrittr', 'tidyr', 'flowCore', 'data.table', 'readr')
sapply(pkgs2load, require, character.only = TRUE)
set.seed(20191007)
# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/"
files <- list.files(data_dir, pattern = "10_A_KTR-019 stim_Ungated.fcs")
# markers
lineage_markers <- c("147Sm_CD20", "170Er_CD3", "145Nd_CD4",
"146Nd_CD8a", "169Tm_CD45RA", "176Yb_CD56",
"148Nd_CD16", "160Gd_CD14", "209Bi_CD61",
"159Tb_CD11c", "151Eu_CD123", "174Yb_HLA-DR")
# rename column names
extract_exprs <- function(ff, subsample = 20000){
exprs <- ff@exprs[sample(nrow(ff@exprs), min(subsample, nrow(ff@exprs))), ]
name_match <- colnames(exprs) %in% ff@parameters@data$name
ff@parameters@data$desc[is.na(ff@parameters@data$desc)] <-
ff@parameters@data$name[is.na(ff@parameters@data$desc)]
colnames(exprs)[name_match] <- ff@parameters@data$desc[name_match[!is.na(name_match)]]
return(exprs)
}
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
View(dt2)
View(dt)
View(dt)
View(dt2)
pkgs2load <- c('dplyr', 'magrittr', 'tidyr', 'flowCore', 'data.table', 'readr')
files <- list.files(data_dir, pattern = "_A_KTR-019 stim_Ungated.fcs")
files <- list.files(data_dir, pattern = "\d_A_KTR-019 stim_Ungated.fcs")
files <- list.files(data_dir, pattern = "\n_A_KTR-019 stim_Ungated.fcs")
files <- list.files(data_dir, pattern = "A_KTR-019 stim_Ungated.fcs")
fcsFile <- system.file("KTR-019 stim_Ungated.fcs")
## read file and linearize values
samp <-  read.FCS(files, transformation="linearize")
fcsFile <- system.file("10_A_KTR-019 stim_Ungated.fcs")
data_dir <- "DATA/FlowRepository_FR-FCM-Z24N_files copy"
files <- list.files(data_dir, pattern = ".fcs")
## read file and linearize values
samp <-  read.FCS(files, transformation="linearize")
# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/FlowRepository_FR-FCM-Z24N_files copy"
files <- list.files(data_dir, pattern = ".fcs")
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/FlowRepository_FR-FCM-Z24N_files copy/"
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
View(dt2)
View(dt2)
View(dt2)
View(dt)
View(dt2)
# write to file
write_csv(x = dt2, path = 'data/cell_data.csv')
pkgs2load <- c('dplyr', 'magrittr', 'tidyr', 'flowCore', 'data.table', 'readr')
sapply(pkgs2load, require, character.only = TRUE)
set.seed(20191007)
# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/FlowRepository_FR-FCM-Z24N_files copy/"
files <- list.files(data_dir, pattern = ".fcs")
# markers
lineage_markers <- c("147Sm_CD20", "170Er_CD3", "145Nd_CD4",
"146Nd_CD8a", "169Tm_CD45RA", "176Yb_CD56",
"148Nd_CD16", "160Gd_CD14", "209Bi_CD61",
"159Tb_CD11c", "151Eu_CD123", "174Yb_HLA-DR")
# rename column names
extract_exprs <- function(ff, subsample = 20000){
exprs <- ff@exprs[sample(nrow(ff@exprs), min(subsample, nrow(ff@exprs))), ]
name_match <- colnames(exprs) %in% ff@parameters@data$name
ff@parameters@data$desc[is.na(ff@parameters@data$desc)] <-
ff@parameters@data$name[is.na(ff@parameters@data$desc)]
colnames(exprs)[name_match] <- ff@parameters@data$desc[name_match[!is.na(name_match)]]
return(exprs)
}
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/FlowRepository_FR-FCM-Z24N_files copy/UNSTIM"
files <- list.files(data_dir, pattern = ".fcs")
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# rename column names
extract_exprs <- function(ff, subsample = 20000){
exprs <- ff@exprs[sample(nrow(ff@exprs), min(subsample, nrow(ff@exprs))), ]
name_match <- colnames(exprs) %in% ff@parameters@data$name
ff@parameters@data$desc[is.na(ff@parameters@data$desc)] <-
ff@parameters@data$name[is.na(ff@parameters@data$desc)]
colnames(exprs)[name_match] <- ff@parameters@data$desc[name_match[!is.na(name_match)]]
return(exprs)
}
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# directory and files
# data from Flow Repository https://flowrepository.org/, experiment-ID FR-FCM-Z24N
# data_dir <- "Z:/data/RA-HD data/Fcs_raw/"
data_dir <- "DATA/FlowRepository_FR-FCM-Z24N_files copy/UNSTIM/"
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
files <- list.files(data_dir, pattern = "RA-038 unstim_Ungated.fcs")
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
View(dt)
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
View(dt2)
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=30000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
View(dt)
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=10000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
# rename column names
extract_exprs <- function(ff, subsample = 10000){
exprs <- ff@exprs[sample(nrow(ff@exprs), min(subsample, nrow(ff@exprs))), ]
name_match <- colnames(exprs) %in% ff@parameters@data$name
ff@parameters@data$desc[is.na(ff@parameters@data$desc)] <-
ff@parameters@data$name[is.na(ff@parameters@data$desc)]
colnames(exprs)[name_match] <- ff@parameters@data$desc[name_match[!is.na(name_match)]]
return(exprs)
}
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=10000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# rename column names
extract_exprs <- function(ff, subsample = 30000){
exprs <- ff@exprs[sample(nrow(ff@exprs), min(subsample, nrow(ff@exprs))), ]
name_match <- colnames(exprs) %in% ff@parameters@data$name
ff@parameters@data$desc[is.na(ff@parameters@data$desc)] <-
ff@parameters@data$name[is.na(ff@parameters@data$desc)]
colnames(exprs)[name_match] <- ff@parameters@data$desc[name_match[!is.na(name_match)]]
return(exprs)
}
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=10000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
k <- nrow(read.FCS(paste0(data_dir, file))@exprs)
k <- nrow(read.FCS(paste0(data_dir, file))@exprs)
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file)),
subsample=10000)[, .SD])
dt_loc[, id:=file]
dt_loc
}))
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=10000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
files <- list.files(data_dir, pattern = ".fcs")
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=10000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
# rename column names
extract_exprs <- function(ff, subsample = 20000){
exprs <- ff@exprs[sample(nrow(ff@exprs), min(subsample, nrow(ff@exprs))), ]
name_match <- colnames(exprs) %in% ff@parameters@data$name
ff@parameters@data$desc[is.na(ff@parameters@data$desc)] <-
ff@parameters@data$name[is.na(ff@parameters@data$desc)]
colnames(exprs)[name_match] <- ff@parameters@data$desc[name_match[!is.na(name_match)]]
return(exprs)
}
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
# write to file
write_csv(x = dt2, path = 'data/cell_data.csv')
# read and prepare data for analysis
dt <- rbindlist(lapply(files, function(file){
dt_loc <- data.table(extract_exprs(read.FCS(paste0(data_dir, file))),
subsample=20000)[, .SD,.SDcols = lineage_markers]
dt_loc[, id:=file]
dt_loc
}))
# add ids and grouping information
dt2 <- dt %>%
mutate(group = ifelse(grepl('KTR', id), 'control', 'diseased'),
id = as.integer(as.factor(id))) %>%
select(id, group, everything())
# write to file
write_csv(x = dt2, path = 'data/cell_data.csv')
